#include <megalz.bas>

sub gfxBank(bank as uByte)

	if bank=0 then 
		poke uinteger 23675, @gb1
	else 
		poke uinteger 23675, @gb2
	end if
return

gb1:
	asm
	DEFB 000,000,000,024,024,000,000,000 ; A - Dot
	DEFB 000,024,060,126,126,060,024,000 ; B - Power Pill
	DEFB 000,255,255,000,000,255,255,000 ; C - Horizontal Wall
	DEFB 102,102,102,102,102,102,102,102 ; D - Vertical Wall
	DEFB 102,103,099,096,096,127,063,000 ; E - Bottom Left Corner
	DEFB 102,230,198,006,006,254,252,000 ; F - Bottom Right Corner
	DEFB 000,063,127,096,096,099,103,102 ; G - Top Left Corner
	DEFB 000,252,254,006,006,198,230,102 ; H - Top Right Corner
	DEFB 000,063,127,096,096,127,063,000 ; I - Left Wall End
	DEFB 000,252,254,006,006,254,252,000 ; J - Right Wall End
	DEFB 000,060,126,102,102,102,102,102 ; K - Wall Top End
	DEFB 102,102,102,102,102,126,060,000 ; L - Wall Bottom End
	DEFB 102,230,198,006,006,198,230,102 ; M - T Junction left
	DEFB 102,103,099,096,096,099,103,102 ; N - T Junction Right
	DEFB 102,231,195,000,000,255,255,000 ; O - T Junction Up
	DEFB 000,255,255,000,000,195,231,102 ; P - T Junction Down
	DEFB 000,000,000,126,126,000,000,000 ; Q - Ghost Gate
	end asm
gb2:
	asm
	DEFB 000,000,000,024,024,000,000,000 ; A - Dot
	DEFB 060,126,015,007,007,015,126,060 ; B - Pac-Man Left
	DEFB 060,126,240,224,224,240,126,060 ; C - Pac-Man Right
	DEFB 000,066,195,195,195,231,255,126 ; D - Pac-Man Up
	DEFB 060,126,255,231,195,195,066,000 ; E - Pac-Man Down
	DEFB 060,126,255,255,255,255,126,060 ; F - Pac-Man Closed Circle
	DEFB 060,030,031,015,015,031,030,060 ; G - Pac Man Dying Frame 2 (Left is Frame 1)
	DEFB 012,014,015,015,015,015,014,012 ; H - Pac Man Dying Frame 3 (50%)
	DEFB 000,002,007,007,007,007,002,000 ; I - Pac Man Dying Frame 4 (25%)
	DEFB 000,000,001,003,003,001,000,000 ; J - Pac Man Dying Frame 5 (12%)
	DEFB 066,036,000,000,102,000,036,066 ; K - Pac Man Dying (Pop!)
	DEFB 060,126,219,255,255,255,219,219 ; L - Ghost
	DEFB 001,003,003,006,014,062,124,224 ; M - Banana
	DEFB 002,004,030,063,063,063,063,030 ; N - Apple
	DEFB 004,012,018,054,111,111,118,032 ; O - Cherries
	end asm

newScreenPacked:
	asm
		incbin "teste.bin.mlz"
	end asm

end sub


dim screen(23,30) as uByte

dim initialScreen(23,30) as uByte => { _
	{00,00,07,03,03,03,03,03,03,03,03,03,03,03,03,16,03,03,03,03,03,03,03,03,03,03,03,03,08,00,00},_
	{00,00,04,01,01,01,01,01,01,01,01,01,01,01,01,04,01,01,01,01,01,01,01,01,01,01,01,01,04,00,00},_
	{00,00,04,01,07,03,03,08,01,07,03,03,03,08,01,04,01,07,03,03,03,08,01,07,03,03,08,01,04,00,00},_
	{00,00,04,02,05,03,03,06,01,05,03,03,03,06,01,12,01,05,03,03,03,06,01,05,03,03,06,02,04,00,00},_
	{00,00,04,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,04,00,00},_
	{00,00,04,01,09,03,03,10,01,11,01,09,03,03,03,16,03,03,03,10,01,11,01,09,03,03,10,01,04,00,00},_
	{00,00,04,01,01,01,01,01,01,04,01,01,01,01,01,04,01,01,01,01,01,04,01,01,01,01,01,01,04,00,00},_
	{00,00,05,03,03,03,03,08,01,14,03,03,03,10,00,12,00,09,03,03,03,13,01,07,03,03,03,03,06,00,00},_
	{00,00,00,00,00,00,00,04,01,04,00,00,00,00,00,00,00,00,00,00,00,04,01,04,00,00,00,00,00,00,00},_
	{00,00,00,00,00,00,00,04,01,04,00,07,03,03,10,17,09,03,03,08,00,04,01,04,00,00,00,00,00,00,00},_
	{09,03,03,03,03,03,03,06,01,12,00,04,00,00,00,00,00,00,00,04,00,12,01,05,03,03,03,03,03,03,10},_
	{00,00,00,00,00,00,00,00,01,00,00,04,00,00,00,00,00,00,00,04,00,00,01,00,00,00,00,00,00,00,00},_
	{09,03,03,03,03,03,03,08,01,11,00,04,00,00,00,00,00,00,00,04,00,11,01,07,03,03,03,03,03,03,10},_
	{00,00,00,00,00,00,00,04,01,04,00,05,03,03,03,03,03,03,03,06,00,04,01,04,00,00,00,00,00,00,00},_
	{00,00,00,00,00,00,00,04,01,04,00,00,00,00,00,00,00,00,00,00,00,04,01,04,00,00,00,00,00,00,00},_
	{00,00,07,03,03,03,03,06,01,12,00,09,03,03,03,16,03,03,03,10,00,12,01,05,03,03,03,03,08,00,00},_
	{00,00,04,01,01,01,01,01,01,01,01,01,01,01,01,04,01,01,01,01,01,01,01,01,01,01,01,01,04,00,00},_
	{00,00,04,01,09,03,03,08,01,09,03,03,03,10,01,12,01,09,03,03,03,10,01,07,03,03,10,01,04,00,00},_
	{00,00,04,02,01,01,01,04,01,01,01,01,01,01,01,00,01,01,01,01,01,01,01,04,01,01,01,02,04,00,00},_
	{00,00,14,03,03,10,01,12,01,11,01,09,03,03,03,16,03,03,03,10,01,11,01,12,01,09,03,03,13,00,00},_
	{00,00,04,01,01,01,01,01,01,04,01,01,01,01,01,04,01,01,01,01,01,04,01,01,01,01,01,01,04,00,00},_
	{00,00,04,01,09,03,03,03,03,15,03,03,03,10,01,12,01,09,03,03,03,15,03,03,03,03,10,01,04,00,00},_
	{00,00,04,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,04,00,00},_
	{00,00,05,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,06,00,00}_
}

sub displayNewSheet_old()
	gfxBank(0)
	border 2: paper 0: ink 7: bright 1
	cls
	dim y,x,currentChar as uByte
	screen = initialScreen
	for y=0 to 23
		for x=0 to 30
			currentChar = screen(y,x)
			bright 1
			if currentChar = 0 then 
				continue for
			elseif currentChar=1 then
				ink 2
			elseif currentChar=2 then
				ink 3
			elseif currentChar=17 then
				ink 7
			else
				ink 1: bright 0
			end if
			print at y,x;chr$(143+currentChar)
		next x
	next y
end sub

sub displayNewSheet()
	border 0: paper 0: ink 0: bright 1
	cls
	dim x,y,currentChar as uByte
	screen = initialScreen
	megaLZDepack (@newScreenPacked,16384)
	ink 7
end sub

cls
displayNewSheet()
print at 0,0;""
100 if inkey$ = "" goto 100

